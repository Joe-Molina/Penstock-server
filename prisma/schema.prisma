generator client {
  provider = "prisma-client-js"
}

// generator client {
//   provider        = "prisma-client-js"
//   previewFeatures = ["driverAdapters"]
// }

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Company {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  User      User[]
  Category  Category[]
  Product   Product[]
  Order     Order[]
  Invocie   Invoice[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  password  String
  email     String   @unique
  role      String
  status    Boolean  @default(true)
  client    Client[]
  Seller    Seller[]
  Company   Company? @relation(fields: [companyId], references: [id])
  companyId Int?
}

model Client {
  id                     Int                      @id @default(autoincrement())
  name                   String
  lastname               String
  store                  String
  address                String
  user                   User                     @relation(fields: [userId], references: [id])
  userId                 Int
  Order                  Order[]
  salesperson_assignment salesperson_assignment[]
}

model Seller {
  id                     Int                      @id @default(autoincrement())
  name                   String
  lastname               String?
  user                   User                     @relation(fields: [userId], references: [id])
  userId                 Int
  salesperson_assignment salesperson_assignment[]
}

model salesperson_assignment {
  id       Int    @id @default(autoincrement())
  seller   Seller @relation(fields: [sellerId], references: [id])
  sellerId Int
  client   Client @relation(fields: [clientId], references: [id])
  clientId Int    @unique
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  Product   Product[]
  Company   Company?  @relation(fields: [companyId], references: [id])
  companyId Int?
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  price        Float
  photo        String
  description  String
  category     Category       @relation(fields: [categoryId], references: [id])
  categoryId   Int
  Order_Detail Order_Detail[]
  Company      Company?       @relation(fields: [companyId], references: [id])
  companyId    Int?
}

model Order {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  revised      Boolean        @default(false)
  client       Client         @relation(fields: [clientId], references: [id])
  clientId     Int
  Order_Detail Order_Detail[]
  Invoice      Invoice[]
  Company      Company?       @relation(fields: [companyId], references: [id])
  companyId    Int?
}

model Order_Detail {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  amount    Int
}

model Invoice {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  invoice_number Int
  order          Order    @relation(fields: [orderId], references: [id])
  orderId        Int
  Company        Company? @relation(fields: [companyId], references: [id])
  companyId      Int?
}
